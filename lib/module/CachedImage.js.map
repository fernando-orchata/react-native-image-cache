{"version":3,"sources":["CachedImage.tsx"],"names":["React","useEffect","Animated","Image","RNImage","Platform","StyleSheet","View","CacheManager","AnimatedImage","createAnimatedComponent","AnimatedView","defaultProps","onError","CachedImage","props","error","setError","useState","uri","setUri","undefined","source","propsSource","animatedImage","useRef","Value","current","animatedThumbnailImage","animatedLoadingImage","load","catch","cacheKey","options","path","get","getPath","nativeEvent","Error","e","onThumbnailLoad","setTimeout","timing","toValue","useNativeDriver","start","duration","thumbnailAnimationDuration","config","onImageError","onImageLoad","sourceAnimationDuration","blurRadius","loadingImageComponent","LoadingImageComponent","loadingImageStyle","style","loadingSource","resizeMode","thumbnailSource","rest","isImageReady","styles","container","opacity","OS","imageStyle","create","backgroundColor","bottom","left","position","right","top","alignItems","alignSelf","justifyContent"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport {\n  Animated,\n  Image as RNImage,\n  Platform,\n  StyleSheet,\n  View,\n} from 'react-native';\n\nimport CacheManager from './CacheManager';\nimport { ImageProps, IProps } from './types';\n\nconst AnimatedImage = Animated.createAnimatedComponent(RNImage);\nconst AnimatedView = Animated.View;\n\nconst defaultProps = {\n  onError: () => {},\n};\n\nconst CachedImage = (props: IProps & typeof defaultProps) => {\n  const [error, setError] = React.useState<boolean>(false);\n  const [uri, setUri] = React.useState<string | undefined>(undefined);\n\n  const { source: propsSource } = props;\n\n  const animatedImage = React.useRef(new Animated.Value(0)).current;\n\n  const animatedThumbnailImage = React.useRef(new Animated.Value(0)).current;\n\n  const animatedLoadingImage = React.useRef(new Animated.Value(1)).current;\n\n  useEffect(() => {\n    if (propsSource !== uri) {\n      load(props).catch();\n    }\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, [propsSource, uri]);\n\n  const load = async ({\n    cacheKey,\n    onError,\n    options = {},\n    source,\n  }: ImageProps): Promise<void> => {\n    if (source) {\n      try {\n        const path = await CacheManager.get(\n          source,\n          options,\n          cacheKey || source\n        ).getPath();\n        if (path) {\n          setUri(path);\n          setError(false);\n        } else {\n          setError(true);\n          onError({\n            nativeEvent: { error: new Error('Could not load image') },\n          });\n        }\n      } catch (e) {\n        setError(true);\n        onError({ nativeEvent: { error: e } });\n      }\n    }\n  };\n\n  const onThumbnailLoad = () => {\n    setTimeout(() => {\n      Animated.timing(animatedLoadingImage, {\n        toValue: 0,\n        useNativeDriver: true,\n      }).start(() => {\n        Animated.timing(animatedThumbnailImage, {\n          toValue: 1,\n          duration:\n            props.thumbnailAnimationDuration ||\n            CacheManager.config.thumbnailAnimationDuration,\n          useNativeDriver: true,\n        }).start();\n      });\n    }, 5000);\n  };\n\n  const onImageError = (): void => setError(true);\n\n  const onImageLoad = (): void => {\n    Animated.timing(animatedImage, {\n      toValue: 1,\n      duration:\n        props.sourceAnimationDuration ||\n        CacheManager.config.sourceAnimationDuration,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  const {\n    blurRadius,\n    loadingImageComponent: LoadingImageComponent,\n    loadingImageStyle = props.style,\n    loadingSource,\n    resizeMode,\n    style,\n    thumbnailSource,\n    ...rest\n  } = props;\n\n  const isImageReady = !!uri;\n\n  return (\n    <View style={styles.container}>\n      {!isImageReady &&\n        (LoadingImageComponent ? (\n          <AnimatedView\n            style={[\n              styles.loadingImageStyle,\n              { opacity: animatedLoadingImage },\n            ]}\n          >\n            <LoadingImageComponent />\n          </AnimatedView>\n        ) : (\n          <View style={[styles.loadingImageStyle, style]}>\n            <AnimatedImage\n              resizeMode={resizeMode || 'contain'}\n              style={[{ opacity: animatedLoadingImage }, loadingImageStyle]}\n              // @ts-ignore\n              source={loadingSource}\n            />\n          </View>\n        ))}\n      <AnimatedImage\n        blurRadius={blurRadius || CacheManager.config.blurRadius}\n        onLoad={onThumbnailLoad}\n        resizeMode={resizeMode || 'contain'}\n        source={{ uri: thumbnailSource }}\n        style={[{ opacity: animatedThumbnailImage }, style]}\n      />\n      <AnimatedImage\n        {...rest}\n        onError={onImageError}\n        onLoad={onImageLoad}\n        resizeMode={resizeMode || 'contain'}\n        // @ts-ignore\n        source={\n          error || !uri\n            ? loadingSource\n            : {\n                uri: Platform.OS === 'android' ? `file://${uri}` : uri,\n              }\n        }\n        // @ts-ignore\n        style={[styles.imageStyle, { opacity: animatedImage }, style]}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'transparent',\n  },\n  imageStyle: {\n    bottom: 0,\n    left: 0,\n    position: 'absolute',\n    right: 0,\n    top: 0,\n  },\n  loadingImageStyle: {\n    alignItems: 'center',\n    alignSelf: 'center',\n    bottom: 0,\n    justifyContent: 'center',\n    left: 0,\n    position: 'absolute',\n    right: 0,\n    top: 0,\n  },\n});\n\nCachedImage.defaultProps = defaultProps;\n\nexport default CachedImage;\n"]}